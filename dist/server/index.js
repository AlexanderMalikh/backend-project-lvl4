"use strict";

var _fastify = _interopRequireDefault(require("fastify"));

var _rollbar = _interopRequireDefault(require("rollbar"));

var _path = _interopRequireDefault(require("path"));

var _dotenv = _interopRequireDefault(require("dotenv"));

var _pug = _interopRequireDefault(require("pug"));

var _fastifyStatic = _interopRequireDefault(require("fastify-static"));

var _fastifyFormbody = _interopRequireDefault(require("fastify-formbody"));

var _pointOfView = _interopRequireDefault(require("point-of-view"));

var _index = _interopRequireDefault(require("./routes/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_dotenv.default.config();

const rollbar = new _rollbar.default({
  accessToken: process.env.POST_SERVER_ITEM_ACCESS_TOKEN,
  captureUncaught: true,
  captureUnhandledRejections: true
}); //  app.use(rollbar.errorHandler());

rollbar.log('Hello world!');

const setUpViews = app => {
  app.register(_pointOfView.default, {
    engine: {
      pug: _pug.default
    },
    includeViewExtension: true,
    defaultContext: {
      assetPath: filename => `/assets/${filename}`
    }
  });
};

const setUpAssets = app => {
  app.register(_fastifyStatic.default, {
    root: _path.default.join(__dirname, '..', 'public'),
    prefix: '/assets/'
  });
};

const app = new _fastify.default({
  logger: true
});

const registerPlugins = app => {
  app.register(_fastifyFormbody.default);
  setUpViews(app);
  setUpAssets(app);
  app.register(_index.default);
};

registerPlugins(app);
app.listen(process.env.PORT || 3000, '0.0.0.0', (err, address) => {
  if (err) {
    app.log.error(err);
    process.exit(1);
  }

  app.log.info(`server listening on ${address}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9pbmRleC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJyb2xsYmFyIiwiUm9sbGJhciIsImFjY2Vzc1Rva2VuIiwicHJvY2VzcyIsImVudiIsIlBPU1RfU0VSVkVSX0lURU1fQUNDRVNTX1RPS0VOIiwiY2FwdHVyZVVuY2F1Z2h0IiwiY2FwdHVyZVVuaGFuZGxlZFJlamVjdGlvbnMiLCJsb2ciLCJzZXRVcFZpZXdzIiwiYXBwIiwicmVnaXN0ZXIiLCJwb2ludE9mVmlldyIsImVuZ2luZSIsInB1ZyIsIlB1ZyIsImluY2x1ZGVWaWV3RXh0ZW5zaW9uIiwiZGVmYXVsdENvbnRleHQiLCJhc3NldFBhdGgiLCJmaWxlbmFtZSIsInNldFVwQXNzZXRzIiwiZmFzdGlmeVN0YXRpYyIsInJvb3QiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInByZWZpeCIsIkZhc3RpZnkiLCJsb2dnZXIiLCJyZWdpc3RlclBsdWdpbnMiLCJmYXN0aWZ5Rm9ybWJvZHkiLCJyb3V0ZXMiLCJsaXN0ZW4iLCJQT1JUIiwiZXJyIiwiYWRkcmVzcyIsImVycm9yIiwiZXhpdCIsImluZm8iXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7QUFFQUEsZ0JBQU9DLE1BQVA7O0FBRUEsTUFBTUMsT0FBTyxHQUFHLElBQUlDLGdCQUFKLENBQVk7QUFDMUJDLEVBQUFBLFdBQVcsRUFBRUMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLDZCQURDO0FBRTFCQyxFQUFBQSxlQUFlLEVBQUUsSUFGUztBQUcxQkMsRUFBQUEsMEJBQTBCLEVBQUU7QUFIRixDQUFaLENBQWhCLEMsQ0FNQTs7QUFFQVAsT0FBTyxDQUFDUSxHQUFSLENBQVksY0FBWjs7QUFFQSxNQUFNQyxVQUFVLEdBQUlDLEdBQUQsSUFBUztBQUMxQkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFDLG9CQUFiLEVBQTBCO0FBQ3hCQyxJQUFBQSxNQUFNLEVBQUU7QUFDTkMsTUFBQUEsR0FBRyxFQUFFQztBQURDLEtBRGdCO0FBSXhCQyxJQUFBQSxvQkFBb0IsRUFBRSxJQUpFO0FBS3hCQyxJQUFBQSxjQUFjLEVBQUU7QUFDZEMsTUFBQUEsU0FBUyxFQUFHQyxRQUFELElBQWUsV0FBVUEsUUFBUztBQUQvQjtBQUxRLEdBQTFCO0FBU0QsQ0FWRDs7QUFZQSxNQUFNQyxXQUFXLEdBQUlWLEdBQUQsSUFBUztBQUMzQkEsRUFBQUEsR0FBRyxDQUFDQyxRQUFKLENBQWFVLHNCQUFiLEVBQTRCO0FBQzFCQyxJQUFBQSxJQUFJLEVBQUVDLGNBQUtDLElBQUwsQ0FBVUMsU0FBVixFQUFxQixJQUFyQixFQUEyQixRQUEzQixDQURvQjtBQUUxQkMsSUFBQUEsTUFBTSxFQUFFO0FBRmtCLEdBQTVCO0FBSUQsQ0FMRDs7QUFPQSxNQUFNaEIsR0FBRyxHQUFHLElBQUlpQixnQkFBSixDQUFZO0FBQ3RCQyxFQUFBQSxNQUFNLEVBQUU7QUFEYyxDQUFaLENBQVo7O0FBSUEsTUFBTUMsZUFBZSxHQUFJbkIsR0FBRCxJQUFTO0FBQy9CQSxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYW1CLHdCQUFiO0FBQ0FyQixFQUFBQSxVQUFVLENBQUNDLEdBQUQsQ0FBVjtBQUNBVSxFQUFBQSxXQUFXLENBQUNWLEdBQUQsQ0FBWDtBQUNBQSxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYW9CLGNBQWI7QUFDRCxDQUxEOztBQU9BRixlQUFlLENBQUNuQixHQUFELENBQWY7QUFFQUEsR0FBRyxDQUFDc0IsTUFBSixDQUFXN0IsT0FBTyxDQUFDQyxHQUFSLENBQVk2QixJQUFaLElBQW9CLElBQS9CLEVBQXFDLFNBQXJDLEVBQWdELENBQUNDLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUNoRSxNQUFJRCxHQUFKLEVBQVM7QUFDUHhCLElBQUFBLEdBQUcsQ0FBQ0YsR0FBSixDQUFRNEIsS0FBUixDQUFjRixHQUFkO0FBQ0EvQixJQUFBQSxPQUFPLENBQUNrQyxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUNEM0IsRUFBQUEsR0FBRyxDQUFDRixHQUFKLENBQVE4QixJQUFSLENBQWMsdUJBQXNCSCxPQUFRLEVBQTVDO0FBQ0QsQ0FORCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGYXN0aWZ5IGZyb20gJ2Zhc3RpZnknO1xuaW1wb3J0IFJvbGxiYXIgZnJvbSAncm9sbGJhcic7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCBQdWcgZnJvbSAncHVnJztcbmltcG9ydCBmYXN0aWZ5U3RhdGljIGZyb20gJ2Zhc3RpZnktc3RhdGljJztcbmltcG9ydCBmYXN0aWZ5Rm9ybWJvZHkgZnJvbSAnZmFzdGlmeS1mb3JtYm9keSc7XG5pbXBvcnQgcG9pbnRPZlZpZXcgZnJvbSAncG9pbnQtb2Ytdmlldyc7XG5pbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzL2luZGV4LmpzJztcblxuZG90ZW52LmNvbmZpZygpO1xuXG5jb25zdCByb2xsYmFyID0gbmV3IFJvbGxiYXIoe1xuICBhY2Nlc3NUb2tlbjogcHJvY2Vzcy5lbnYuUE9TVF9TRVJWRVJfSVRFTV9BQ0NFU1NfVE9LRU4sXG4gIGNhcHR1cmVVbmNhdWdodDogdHJ1ZSxcbiAgY2FwdHVyZVVuaGFuZGxlZFJlamVjdGlvbnM6IHRydWUsXG59KTtcblxuLy8gIGFwcC51c2Uocm9sbGJhci5lcnJvckhhbmRsZXIoKSk7XG5cbnJvbGxiYXIubG9nKCdIZWxsbyB3b3JsZCEnKTtcblxuY29uc3Qgc2V0VXBWaWV3cyA9IChhcHApID0+IHtcbiAgYXBwLnJlZ2lzdGVyKHBvaW50T2ZWaWV3LCB7XG4gICAgZW5naW5lOiB7XG4gICAgICBwdWc6IFB1ZyxcbiAgICB9LFxuICAgIGluY2x1ZGVWaWV3RXh0ZW5zaW9uOiB0cnVlLFxuICAgIGRlZmF1bHRDb250ZXh0OiB7XG4gICAgICBhc3NldFBhdGg6IChmaWxlbmFtZSkgPT4gYC9hc3NldHMvJHtmaWxlbmFtZX1gLFxuICAgIH0sXG4gIH0pO1xufTtcblxuY29uc3Qgc2V0VXBBc3NldHMgPSAoYXBwKSA9PiB7XG4gIGFwcC5yZWdpc3RlcihmYXN0aWZ5U3RhdGljLCB7XG4gICAgcm9vdDogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uJywgJ3B1YmxpYycpLFxuICAgIHByZWZpeDogJy9hc3NldHMvJyxcbiAgfSk7XG59O1xuXG5jb25zdCBhcHAgPSBuZXcgRmFzdGlmeSh7XG4gIGxvZ2dlcjogdHJ1ZSxcbn0pO1xuXG5jb25zdCByZWdpc3RlclBsdWdpbnMgPSAoYXBwKSA9PiB7XG4gIGFwcC5yZWdpc3RlcihmYXN0aWZ5Rm9ybWJvZHkpO1xuICBzZXRVcFZpZXdzKGFwcCk7XG4gIHNldFVwQXNzZXRzKGFwcCk7XG4gIGFwcC5yZWdpc3Rlcihyb3V0ZXMpO1xufTtcblxucmVnaXN0ZXJQbHVnaW5zKGFwcCk7XG5cbmFwcC5saXN0ZW4ocHJvY2Vzcy5lbnYuUE9SVCB8fCAzMDAwLCAnMC4wLjAuMCcsIChlcnIsIGFkZHJlc3MpID0+IHtcbiAgaWYgKGVycikge1xuICAgIGFwcC5sb2cuZXJyb3IoZXJyKTtcbiAgICBwcm9jZXNzLmV4aXQoMSk7XG4gIH1cbiAgYXBwLmxvZy5pbmZvKGBzZXJ2ZXIgbGlzdGVuaW5nIG9uICR7YWRkcmVzc31gKTtcbn0pO1xuIl19