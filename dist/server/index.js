"use strict";

var _fastify = _interopRequireDefault(require("fastify"));

var _rollbar = _interopRequireDefault(require("rollbar"));

var _path = _interopRequireDefault(require("path"));

var _dotenv = _interopRequireDefault(require("dotenv"));

var _pug = _interopRequireDefault(require("pug"));

var _fastifyStatic = _interopRequireDefault(require("fastify-static"));

var _fastifyFormbody = _interopRequireDefault(require("fastify-formbody"));

var _fastifyObjectionjs = _interopRequireDefault(require("fastify-objectionjs"));

var _fastifyFlash = _interopRequireDefault(require("fastify-flash"));

var _fastifyErrorPage = _interopRequireDefault(require("fastify-error-page"));

var _fastifySecureSession = _interopRequireDefault(require("fastify-secure-session"));

var _fastifyMethodOverride = _interopRequireDefault(require("fastify-method-override"));

var _pointOfView = _interopRequireDefault(require("point-of-view"));

var _models = _interopRequireDefault(require("./models"));

var _knexfile = _interopRequireDefault(require("../knexfile.js"));

var _index = _interopRequireDefault(require("./routes/index.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

_dotenv.default.config();

const rollbar = new _rollbar.default({
  accessToken: process.env.POST_SERVER_ITEM_ACCESS_TOKEN,
  captureUncaught: true,
  captureUnhandledRejections: true
}); //  app.use(rollbar.errorHandler());

rollbar.log('Hello world!');

const setUpViews = app => {
  app.register(_pointOfView.default, {
    engine: {
      pug: _pug.default
    },
    includeViewExtension: true,
    defaultContext: {
      assetPath: filename => `/assets/${filename}`
    }
  });
  app.decorateReply('render', function render(viewPath, locals) {
    this.view(viewPath, { ...locals,
      reply: this
    });
  });
};

const setUpAssets = app => {
  app.register(_fastifyStatic.default, {
    root: _path.default.join(__dirname, '..', 'public'),
    prefix: '/assets/'
  });
};

const addHooks = app => {
  app.decorateRequest('currentUser', null);
  app.decorateRequest('signedIn', false);
  app.addHook('preHandler', async req => {
    const userId = req.session.get('userId');

    if (userId) {
      req.currentUser = await app.objection.models.user.query().findById(userId);
      req.signedIn = true;
    }
  });
};

const app = new _fastify.default({
  logger: true
});

const registerPlugins = app => {
  app.register(_fastifyErrorPage.default);
  app.register(_fastifyFormbody.default);
  setUpViews(app);
  setUpAssets(app);
  app.register(_fastifyObjectionjs.default, {
    knexConfig: _knexfile.default.development,
    models: _models.default
  });
  app.register(_fastifySecureSession.default, {
    secret: 'qwertyuiopasdfghjklzxcnmmmzxasjhdklasjkdlawqi',
    cookie: {
      path: '/'
    }
  });
  app.register(_fastifyMethodOverride.default);
  app.register(_fastifyFlash.default);
  (0, _index.default)(app);
  addHooks(app);
};

registerPlugins(app);
app.listen(process.env.PORT || 3000, '0.0.0.0', (err, address) => {
  if (err) {
    app.log.error(err);
    process.exit(1);
  }

  app.log.info(`server listening on ${address}`);
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NlcnZlci9pbmRleC5qcyJdLCJuYW1lcyI6WyJkb3RlbnYiLCJjb25maWciLCJyb2xsYmFyIiwiUm9sbGJhciIsImFjY2Vzc1Rva2VuIiwicHJvY2VzcyIsImVudiIsIlBPU1RfU0VSVkVSX0lURU1fQUNDRVNTX1RPS0VOIiwiY2FwdHVyZVVuY2F1Z2h0IiwiY2FwdHVyZVVuaGFuZGxlZFJlamVjdGlvbnMiLCJsb2ciLCJzZXRVcFZpZXdzIiwiYXBwIiwicmVnaXN0ZXIiLCJwb2ludE9mVmlldyIsImVuZ2luZSIsInB1ZyIsIlB1ZyIsImluY2x1ZGVWaWV3RXh0ZW5zaW9uIiwiZGVmYXVsdENvbnRleHQiLCJhc3NldFBhdGgiLCJmaWxlbmFtZSIsImRlY29yYXRlUmVwbHkiLCJyZW5kZXIiLCJ2aWV3UGF0aCIsImxvY2FscyIsInZpZXciLCJyZXBseSIsInNldFVwQXNzZXRzIiwiZmFzdGlmeVN0YXRpYyIsInJvb3QiLCJwYXRoIiwiam9pbiIsIl9fZGlybmFtZSIsInByZWZpeCIsImFkZEhvb2tzIiwiZGVjb3JhdGVSZXF1ZXN0IiwiYWRkSG9vayIsInJlcSIsInVzZXJJZCIsInNlc3Npb24iLCJnZXQiLCJjdXJyZW50VXNlciIsIm9iamVjdGlvbiIsIm1vZGVscyIsInVzZXIiLCJxdWVyeSIsImZpbmRCeUlkIiwic2lnbmVkSW4iLCJGYXN0aWZ5IiwibG9nZ2VyIiwicmVnaXN0ZXJQbHVnaW5zIiwiZmFzdGlmeUVycm9yUGFnZSIsImZhc3RpZnlGb3JtYm9keSIsImZhc3RpZnlPYmplY3Rpb24iLCJrbmV4Q29uZmlnIiwiZGV2ZWxvcG1lbnQiLCJmYXN0aWZ5U2VjdXJlU2Vzc2lvbiIsInNlY3JldCIsImNvb2tpZSIsImZhc3RpZnlNZXRob2RPdmVycmlkZSIsImZhc3RpZnlGbGFzaCIsImxpc3RlbiIsIlBPUlQiLCJlcnIiLCJhZGRyZXNzIiwiZXJyb3IiLCJleGl0IiwiaW5mbyJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7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O0FBRjZCLEdBQS9CO0FBSUFoQyxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYTRDLDZCQUFiLEVBQW1DO0FBQ2pDQyxJQUFBQSxNQUFNLEVBQUUsK0NBRHlCO0FBRWpDQyxJQUFBQSxNQUFNLEVBQUU7QUFDTjVCLE1BQUFBLElBQUksRUFBRTtBQURBO0FBRnlCLEdBQW5DO0FBTUFuQixFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYStDLDhCQUFiO0FBQ0FoRCxFQUFBQSxHQUFHLENBQUNDLFFBQUosQ0FBYWdELHFCQUFiO0FBQ0Esc0JBQU9qRCxHQUFQO0FBQ0F1QixFQUFBQSxRQUFRLENBQUN2QixHQUFELENBQVI7QUFDRCxDQW5CRDs7QUFxQkF1QyxlQUFlLENBQUN2QyxHQUFELENBQWY7QUFFQUEsR0FBRyxDQUFDa0QsTUFBSixDQUFXekQsT0FBTyxDQUFDQyxHQUFSLENBQVl5RCxJQUFaLElBQW9CLElBQS9CLEVBQXFDLFNBQXJDLEVBQWdELENBQUNDLEdBQUQsRUFBTUMsT0FBTixLQUFrQjtBQUNoRSxNQUFJRCxHQUFKLEVBQVM7QUFDUHBELElBQUFBLEdBQUcsQ0FBQ0YsR0FBSixDQUFRd0QsS0FBUixDQUFjRixHQUFkO0FBQ0EzRCxJQUFBQSxPQUFPLENBQUM4RCxJQUFSLENBQWEsQ0FBYjtBQUNEOztBQUNEdkQsRUFBQUEsR0FBRyxDQUFDRixHQUFKLENBQVEwRCxJQUFSLENBQWMsdUJBQXNCSCxPQUFRLEVBQTVDO0FBQ0QsQ0FORCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBGYXN0aWZ5IGZyb20gJ2Zhc3RpZnknO1xuaW1wb3J0IFJvbGxiYXIgZnJvbSAncm9sbGJhcic7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBkb3RlbnYgZnJvbSAnZG90ZW52JztcbmltcG9ydCBQdWcgZnJvbSAncHVnJztcbmltcG9ydCBmYXN0aWZ5U3RhdGljIGZyb20gJ2Zhc3RpZnktc3RhdGljJztcbmltcG9ydCBmYXN0aWZ5Rm9ybWJvZHkgZnJvbSAnZmFzdGlmeS1mb3JtYm9keSc7XG5pbXBvcnQgZmFzdGlmeU9iamVjdGlvbiBmcm9tICdmYXN0aWZ5LW9iamVjdGlvbmpzJztcbmltcG9ydCBmYXN0aWZ5Rmxhc2ggZnJvbSAnZmFzdGlmeS1mbGFzaCc7XG5pbXBvcnQgZmFzdGlmeUVycm9yUGFnZSBmcm9tICdmYXN0aWZ5LWVycm9yLXBhZ2UnO1xuaW1wb3J0IGZhc3RpZnlTZWN1cmVTZXNzaW9uIGZyb20gJ2Zhc3RpZnktc2VjdXJlLXNlc3Npb24nO1xuaW1wb3J0IGZhc3RpZnlNZXRob2RPdmVycmlkZSBmcm9tICdmYXN0aWZ5LW1ldGhvZC1vdmVycmlkZSc7XG5pbXBvcnQgcG9pbnRPZlZpZXcgZnJvbSAncG9pbnQtb2Ytdmlldyc7XG5pbXBvcnQgbW9kZWxzIGZyb20gJy4vbW9kZWxzJztcblxuaW1wb3J0IGtuZXhDb25maWcgZnJvbSAnLi4va25leGZpbGUuanMnO1xuaW1wb3J0IHJvdXRlcyBmcm9tICcuL3JvdXRlcy9pbmRleC5qcyc7XG5cbmRvdGVudi5jb25maWcoKTtcblxuY29uc3Qgcm9sbGJhciA9IG5ldyBSb2xsYmFyKHtcbiAgYWNjZXNzVG9rZW46IHByb2Nlc3MuZW52LlBPU1RfU0VSVkVSX0lURU1fQUNDRVNTX1RPS0VOLFxuICBjYXB0dXJlVW5jYXVnaHQ6IHRydWUsXG4gIGNhcHR1cmVVbmhhbmRsZWRSZWplY3Rpb25zOiB0cnVlLFxufSk7XG5cbi8vICBhcHAudXNlKHJvbGxiYXIuZXJyb3JIYW5kbGVyKCkpO1xuXG5yb2xsYmFyLmxvZygnSGVsbG8gd29ybGQhJyk7XG5cbmNvbnN0IHNldFVwVmlld3MgPSAoYXBwKSA9PiB7XG4gIGFwcC5yZWdpc3Rlcihwb2ludE9mVmlldywge1xuICAgIGVuZ2luZToge1xuICAgICAgcHVnOiBQdWcsXG4gICAgfSxcbiAgICBpbmNsdWRlVmlld0V4dGVuc2lvbjogdHJ1ZSxcbiAgICBkZWZhdWx0Q29udGV4dDoge1xuICAgICAgYXNzZXRQYXRoOiAoZmlsZW5hbWUpID0+IGAvYXNzZXRzLyR7ZmlsZW5hbWV9YCxcbiAgICB9LFxuICB9KTtcbiAgYXBwLmRlY29yYXRlUmVwbHkoJ3JlbmRlcicsIGZ1bmN0aW9uIHJlbmRlcih2aWV3UGF0aCwgbG9jYWxzKSB7XG4gICAgdGhpcy52aWV3KHZpZXdQYXRoLCB7IC4uLmxvY2FscywgcmVwbHk6IHRoaXMgfSk7XG4gIH0pO1xufTtcblxuY29uc3Qgc2V0VXBBc3NldHMgPSAoYXBwKSA9PiB7XG4gIGFwcC5yZWdpc3RlcihmYXN0aWZ5U3RhdGljLCB7XG4gICAgcm9vdDogcGF0aC5qb2luKF9fZGlybmFtZSwgJy4uJywgJ3B1YmxpYycpLFxuICAgIHByZWZpeDogJy9hc3NldHMvJyxcbiAgfSk7XG59O1xuXG5jb25zdCBhZGRIb29rcyA9IChhcHApID0+IHtcbiAgYXBwLmRlY29yYXRlUmVxdWVzdCgnY3VycmVudFVzZXInLCBudWxsKTtcbiAgYXBwLmRlY29yYXRlUmVxdWVzdCgnc2lnbmVkSW4nLCBmYWxzZSk7XG5cbiAgYXBwLmFkZEhvb2soJ3ByZUhhbmRsZXInLCBhc3luYyAocmVxKSA9PiB7XG4gICAgY29uc3QgdXNlcklkID0gcmVxLnNlc3Npb24uZ2V0KCd1c2VySWQnKTtcbiAgICBpZiAodXNlcklkKSB7XG4gICAgICByZXEuY3VycmVudFVzZXIgPSBhd2FpdCBhcHAub2JqZWN0aW9uLm1vZGVscy51c2VyLnF1ZXJ5KCkuZmluZEJ5SWQodXNlcklkKTtcbiAgICAgIHJlcS5zaWduZWRJbiA9IHRydWU7XG4gICAgfVxuICB9KTtcbn07XG5cbmNvbnN0IGFwcCA9IG5ldyBGYXN0aWZ5KHtcbiAgbG9nZ2VyOiB0cnVlLFxufSk7XG5cbmNvbnN0IHJlZ2lzdGVyUGx1Z2lucyA9IChhcHApID0+IHtcbiAgYXBwLnJlZ2lzdGVyKGZhc3RpZnlFcnJvclBhZ2UpO1xuICBhcHAucmVnaXN0ZXIoZmFzdGlmeUZvcm1ib2R5KTtcbiAgc2V0VXBWaWV3cyhhcHApO1xuICBzZXRVcEFzc2V0cyhhcHApO1xuICBhcHAucmVnaXN0ZXIoZmFzdGlmeU9iamVjdGlvbiwge1xuICAgIGtuZXhDb25maWc6IGtuZXhDb25maWcuZGV2ZWxvcG1lbnQsXG4gICAgbW9kZWxzLFxuICB9KTtcbiAgYXBwLnJlZ2lzdGVyKGZhc3RpZnlTZWN1cmVTZXNzaW9uLCB7XG4gICAgc2VjcmV0OiAncXdlcnR5dWlvcGFzZGZnaGprbHp4Y25tbW16eGFzamhka2xhc2prZGxhd3FpJyxcbiAgICBjb29raWU6IHtcbiAgICAgIHBhdGg6ICcvJyxcbiAgICB9LFxuICB9KTtcbiAgYXBwLnJlZ2lzdGVyKGZhc3RpZnlNZXRob2RPdmVycmlkZSk7XG4gIGFwcC5yZWdpc3RlcihmYXN0aWZ5Rmxhc2gpO1xuICByb3V0ZXMoYXBwKTtcbiAgYWRkSG9va3MoYXBwKTtcbn07XG5cbnJlZ2lzdGVyUGx1Z2lucyhhcHApO1xuXG5hcHAubGlzdGVuKHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMCwgJzAuMC4wLjAnLCAoZXJyLCBhZGRyZXNzKSA9PiB7XG4gIGlmIChlcnIpIHtcbiAgICBhcHAubG9nLmVycm9yKGVycik7XG4gICAgcHJvY2Vzcy5leGl0KDEpO1xuICB9XG4gIGFwcC5sb2cuaW5mbyhgc2VydmVyIGxpc3RlbmluZyBvbiAke2FkZHJlc3N9YCk7XG59KTtcbiJdfQ==